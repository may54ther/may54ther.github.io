/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var E=Object.defineProperty;var V=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var U=Object.prototype.hasOwnProperty;var L=(i,t)=>{for(var e in t)E(i,e,{get:t[e],enumerable:!0})},R=(i,t,e,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of M(t))!U.call(i,n)&&n!==e&&E(i,n,{get:()=>t[n],enumerable:!(s=V(t,n))||s.enumerable});return i};var N=i=>R(E({},"__esModule",{value:!0}),i);var H={};L(H,{default:()=>x});module.exports=N(H);var u=require("obsidian"),m=require("@codemirror/view"),y=require("@codemirror/view"),W={enabledAdmonitions:{note:!0,tip:!0,info:!0,warning:!0,danger:!0}},x=class extends u.Plugin{constructor(){super(...arguments);this.editorExtensions=[]}async onload(){await this.loadSettings(),this.registerMarkdownPostProcessor((e,s)=>{this.processCustomAdmonitionSyntax(e,s)}),this.updateEditorExtensions(),this.addSettingTab(new b(this.app,this))}async processCustomAdmonitionSyntax(e,s){var d,a;let n=e.querySelectorAll("p");for(let l=0;l<n.length;l++){let r=n[l],g=(d=r.textContent)==null?void 0:d.trim();if(!g||!g.startsWith(":::")||!g.match(/^:::(note|tip|info|warning|danger)(?:\s|$)/))continue;let c=g.match(/^:::(note|tip|info|warning|danger)(?:\s+\[(.*?)\])?\s+([\s\S]+?)\s+:::$/);if(c){let o=c[1],v=c[2],$=c[3];if(!this.settings.enabledAdmonitions[o])continue;let S=e.createDiv({cls:["docusaurus-admonition",`docusaurus-admonition-${o}`]});S.createDiv({cls:"docusaurus-admonition-title",text:v||o.toUpperCase()});let k=S.createDiv({cls:"docusaurus-admonition-content"});await u.MarkdownRenderer.render(this.app,$,k,s.sourcePath,this),r.replaceWith(S);continue}let h=g.match(/^:::(note|tip|info|warning|danger)(?:\s+\[(.*?)\])?$/);if(!h)continue;let A=h[1],C=h[2],f=-1,w=[];for(let o=l+1;o<n.length;o++)if(((a=n[o].textContent)==null?void 0:a.trim())===":::"){f=o;break}else w.push(n[o]);if(f===-1||!this.settings.enabledAdmonitions[A])continue;let D=e.createDiv({cls:["docusaurus-admonition",`docusaurus-admonition-${A}`]});D.createDiv({cls:"docusaurus-admonition-title",text:C||A.toUpperCase()});let P=D.createDiv({cls:"docusaurus-admonition-content"});for(let o=0;o<w.length;o++)P.appendChild(w[o].cloneNode(!0));r.replaceWith(D),w.forEach(o=>o.remove()),n[f].remove(),l=f}}updateEditorExtensions(){try{let e=j(this.settings);this.editorExtensions=[],this.editorExtensions.push(e),this.registerEditorExtension(this.editorExtensions)}catch(e){}}onunload(){}async loadSettings(){this.settings=Object.assign({},W,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},b=class extends u.PluginSettingTab{constructor(t,e){super(t,e),this.plugin=e}display(){let{containerEl:t}=this;t.empty();let e="Enables :::SYNTAX admonition";["note","tip","info","warning","danger"].forEach(n=>{new u.Setting(t).setName(`${n.toUpperCase()} Admonition`).setDesc(`${e.replace("SYNTAX",n)}`).addToggle(d=>d.setValue(this.plugin.settings.enabledAdmonitions[n]).onChange(async a=>{this.plugin.settings.enabledAdmonitions[n]=a,await this.plugin.saveSettings(),this.plugin.updateEditorExtensions()}))})}};function j(i){return y.ViewPlugin.fromClass(class{constructor(t){this.decorations=T(t,i)}update(t){(t.docChanged||t.viewportChanged)&&(this.decorations=T(t.view,i))}},{decorations:t=>t.decorations})}function T(i,t){let e=["note","tip","info","warning","danger"],s=[],n=i.state.doc,d=0;for(;d<n.length;){let a=n.lineAt(d),l=a.text;for(let r of e){if(!t.enabledAdmonitions[r])continue;if(new RegExp(`^:::${r}(?:\\s+\\[.*?\\])?(?:\\s|$)`).test(l)){s.push(m.Decoration.line({attributes:{class:`admonition-${r}-start`}}).range(a.from));let p=a.to+1;for(;p<n.length;){let c=n.lineAt(p);if(c.text.trim()===":::"){s.push(m.Decoration.line({attributes:{class:`admonition-${r}-end`}}).range(c.from));break}else s.push(m.Decoration.line({attributes:{class:`admonition-${r}-content`}}).range(c.from));p=c.to+1}break}}d=a.to+1}return m.Decoration.set(s,!0)}

/* nosourcemap */